openapi: 3.0.3
info:
  title: Ezra e-commerce
  version: '-1.seven.3'
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Validates credentials with server and returns the user object.
      description: >-
        Login or login attempt email is sent. Checks for login attempts in the past 24 hours and locks account if too many attempts were made.
      requestBody:
        required: true
        content:
          application/json:
            example:
              email: me@email.com
              password: supersafe123!
      responses:
        '200':
          description: >-
            credentials are valid, responds with user object. resets failed login attempts. Updates last login at. and clears the password reset timestamps.
        '400':
          description: >-
            error reason is too many failed attempts in 24 hrs, the account is locked try again later.
        '401':
          description: >-
            credentials are invalid, error code 3 reason wrong password. Increases the attempts count and adds a timestamp to the attempts timestamp log.
        '404':
          description: >-
            credentials are invalid, error code 4 reason account does not exists.
  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logs the user out.
      description: >-
        This updates the last loged at timestamp. This is a post because we want
        to fail on further calls with already loged out or other errors.
      responses:
        '200':
          description: logged out succesfully!
        '400':
          description: user has already logged out / session has expired. these edge cases wont update last logout timestamp.
          content:
            application/json:
              examples:
                already logged out:
                  value: |-
                    {
                        "code":1,
                        "reason":"user has already logged out"
                    }
                user tried to logout but session was expired:
                  value: |-
                    {
                        "code": 2,
                        "reason": "user attempted to log out after the session expired (last login was over 72 hours ago)"
                    }
  /users:
    post:
      tags:
        - Authentication
      summary: Signs up a new user.
      description: Creates a new user in db, with default role of client. A sys admin has to perform an account role update to upgrade the account to manager.
      requestBody:
        required: true
        content:
          application/json:
            example:
              first_name: Johns
              last_name: Smiths
              email: johns.smiths@email.com
              password: password123$
      responses:
        '201':
          description: sign up successful.  Sends Welcome email. Then performs login logic. Includes user object in response.
        '409':
          description: error code 5, reason is a user with the given email already exists.
        '400':
          description: error code 6, reason is the user email is invalid OR error code 7 reason is fields invalid aka too long or too short. i.e. password, user, other fields.
  /auth/forgot:
    post:
      tags:
        - Authentication
      summary: Starts the password recovery flow.
      description: Checks for limit of recovery attempts then continues with flow accordingly .
      requestBody:
        required: true
        content:
          application/json:
            example:
              email: my_email_from_2nd_grade@mail.com
      responses:
        '200':
          description: >-
            Increases the count of attempts, adds a timestamp. Sets the reset token. Adds an email to the email queue with a link with the attempt token.
        '400':
          description: >-
            error reason is too many attempts in 24 hours, reset is blocked, try again later.
        '404':
          description: account does not exist





